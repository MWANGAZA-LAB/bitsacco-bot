version: '3.8'

services:
  bitsacco-bot:
    build: .
    container_name: bitsacco-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - whatsapp_sessions:/app/.wwebjs_auth
    depends_on:
      - redis
      - mongodb
    networks:
      - bitsacco-network
    healthcheck:
      test: ["CMD", "node", "-e", "http.get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: bitsacco-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bitsacco-network
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:6
    container_name: bitsacco-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-bitsacco-bot}
    volumes:
      - mongodb_data:/data/db
    networks:
      - bitsacco-network

  nginx:
    image: nginx:alpine
    container_name: bitsacco-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - bitsacco-bot
    networks:
      - bitsacco-network

volumes:
  mongodb_data:
  redis_data:
  whatsapp_sessions:

networks:
  bitsacco-network:
    driver: bridge